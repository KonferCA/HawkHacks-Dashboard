rules_version = '2';

service cloud.firestore {

    function isAuthenticated() {
        return request.auth != null;
    }

    function isAdmin() {
        return request.auth.token.admin == true;
    }

    function isOwner(matchId) {
        return request.auth.uid == matchId;
    }

  match /databases/{database}/documents {
    // Default rule to deny read/write access
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Allow read/write access to the user owns documents
    // Allow read/write access to ALL user documents if the user is Admin
    match /users/{userId} {
      allow read, write: if request.auth != null && (request.auth.token.admin == true || request.auth.uid == userId);
    }

    // Allow read/write access to the entire database for admin users
    match /{document=**} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }

    // Tickets Collection Rules
    match /tickets/{ticketId} {
        // Only grant read perms to owner/admin
        allow read: if isAuthenticated() && (isAdmin() || isOwner(resource.data.userId));
        // Only grant write perms to admin
        allow write: if isAuthenticated() && isAdmin();
    }
  }
}
